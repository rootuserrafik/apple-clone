{"version":3,"sources":["inc/HeaderNavCard.js","inc/HeaderNav.js","inc/Header.js","inc/Body/Body.js","App.js","serviceWorker.js","index.js"],"names":["HeaderNavCard","title","className","HeaderNav","Header","Body","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2SAUeA,MARf,YAAiC,IAATC,EAAQ,EAARA,MACpB,OACI,yBAAKC,UAAU,mBACVD,ICoBEE,MArBf,WACI,OACI,yBAAKD,UAAU,kBACX,yBAAKA,UAAU,YACX,4BACI,6BACA,4BAAI,kBAAC,EAAD,CAAeD,MAAQ,SAC3B,4BAAI,kBAAC,EAAD,CAAeA,MAAQ,UAC3B,4BAAI,kBAAC,EAAD,CAAeA,MAAQ,YAC3B,4BAAI,kBAAC,EAAD,CAAeA,MAAQ,WAC3B,4BAAI,kBAAC,EAAD,CAAeA,MAAQ,QAC3B,4BAAI,kBAAC,EAAD,CAAeA,MAAQ,WAC3B,4BAAI,kBAAC,EAAD,CAAeA,MAAQ,aAC3B,6BACA,iC,MCILG,MAff,WACI,OACI,yBAAKF,UAAU,qBACX,yBAAKA,UAAU,cAGf,kBAAC,EAAD,MACA,yBAAKA,UAAU,oB,MCgCZG,MA3Cf,WACI,OACI,yBAAKH,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BACX,qDAAuB,6BAAK,qDAAqB,qDACjD,0BAAMA,UAAU,wBAAhB,gBAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,yBACX,qDAAuB,6BAAvB,IAA6B,6CAEjC,wBAAIA,UAAU,oBACV,4BACI,uDAA4B,6BAAK,oDAErC,4BACI,qDAA0B,6BAAK,gDAEnC,4BACI,2DAAgC,6BAAK,gDAEzC,4BACI,2DAAgC,6BAAK,gDAEzC,4BACI,sDAA2B,6BAAK,gDAEpC,4BACI,oDAAyB,6BAAK,kDCjBvCI,MAbf,WACE,OACE,yBAAKJ,UAAU,OACb,4BAAQA,UAAU,eAChB,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,kBAAC,EAAD,SCAYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f23d9674.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction HeaderNavCard({title}) {\r\n    return (\r\n        <div className='HeaderNav__Card'>\r\n            {title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderNavCard\r\n","import React from 'react';\r\nimport './HeaderNav.css';\r\nimport HeaderNavCard from './HeaderNavCard';\r\n\r\nfunction HeaderNav() {\r\n    return (\r\n        <div className='HeaderNav__Row'>\r\n            <nav className=\"MainMenu\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li><HeaderNavCard title = \"Mac\"/></li>\r\n                    <li><HeaderNavCard title = \"iPad\"/></li>\r\n                    <li><HeaderNavCard title = \"iPhone\"/></li>\r\n                    <li><HeaderNavCard title = \"Watch\"/></li>\r\n                    <li><HeaderNavCard title = \"TV\"/></li>\r\n                    <li><HeaderNavCard title = \"Music\"/></li>\r\n                    <li><HeaderNavCard title = \"Support\"/></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </nav>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderNav\r\n","import React from 'react';\r\nimport HeaderNav from './HeaderNav';\r\nimport './Header.css';\r\n// import AppleIcon from '@material-ui/icons/Apple';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import LocalMallIcon from '@material-ui/icons/LocalMall';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"App__Header__Area\">\r\n            <div className=\"App__Logo\">\r\n                {/* <AppleIcon /> */}\r\n            </div>\r\n            <HeaderNav />\r\n            <div className=\"Header__Icons\">\r\n                {/* <SearchIcon /> */}\r\n                {/* <LocalMallIcon /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './Body.css';\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className=\"Body__Area\">\r\n            <div className=\"Hero__BG\">\r\n                <div className=\"Hero__Area\">\r\n                    <div className=\"hero__headline__button\">\r\n                        <p>18 Emmy® nominations<br/><span>And we’re just <span> getting started.</span></span></p>\r\n                        <span className=\"hero-button watchnow\">Watch Now</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Module__Content\">\r\n                <div className=\"Module__Content__Text\">\r\n                    <p>8 Emmy® Nominations <br/> <span>including</span></p>\r\n                </div>\r\n                <ul className=\"Row__Nominations\">\r\n                    <li>\r\n                        <p>Outstanding Lead Actress <br/><span>Jennifer Aniston</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Outstanding Lead Actor <br/><span>Steve Carell</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Outstanding Supporting Actor <br/><span>Billy Crudup</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Outstanding Supporting Actor <br/><span>Mark Duplass</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Outstanding Guest Actor <br/><span>Martin Short</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <p>Outstanding Directing <br/><span>Mimi Leder</span></p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import React from 'react';\nimport './App.css';\nimport Header from './inc/Header';\nimport Body from './inc/Body/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <Header />\n      </header>\n      <div className=\"App__Body\">\n        <Body />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}